# === Redis connection ===
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=yourStrongP@ss

# === Streams & groups ===
REQUEST_STREAM=agent.requests
EVENT_STREAM=agent.events
GROUP_PREFIX=cg
CONSUMER_ID=worker-1

# === Machine persona config ===
ALLOWED_PERSONAS=lead-engineer,code-reviewer,security-review,devops,tester-qa,troubleshooting,ui-engineer,coordination,project-manager,architect,summarization,context

# === LM Studio base URL for THIS machine ===
LMS_BASE_URL=http://127.0.0.1:1234

# === Persona â†’ model identifier mapping (JSON) ===
PERSONA_MODELS_JSON={"lead-engineer":"qwen3-coder-30b","code-reviewer":"qwen3-coder-30b","security-review":"qwen3-coder-30b","devops":"qwen3-coder-7b","tester-qa":"qwen3-coder-7b","troubleshooting":"qwen3-coder-7b","ui-engineer":"qwen3-coder-7b","coordination":"llama3-8b-general","project-manager":"llama3-8b-general","architect":"llama3-8b-general","summarization":"llama3-8b-general","context":"qwen3-1p8b"}

# === Dashboard API (optional; can be stubbed) ===
DASHBOARD_BASE_URL=http://localhost:8787
DASHBOARD_API_KEY=dev-demo-key
# DASHBOARD_CONTEXT_ENDPOINT=/v1/context/upsert

# === Apply edits (safe mode) ===
APPLY_EDITS=false
ALLOWED_EDIT_PERSONAS=lead-engineer,devops,ui-engineer,context
MAX_FILE_BYTES=524288
ALLOWED_EXTS=.ts,.tsx,.js,.jsx,.py,.md,.json,.yml,.yaml,.css,.html,.sh,.bat

# === Git workspace ===
# PROJECT_BASE is the directory where repositories will be cloned and managed.
PROJECT_BASE=./projects
# DEFAULT_REPO_NAME is used when no repo is specified in the payload.
DEFAULT_REPO_NAME=active
# Optional legacy override: set REPO_ROOT only if you need to pin a specific repo path.
# REPO_ROOT=./repo

# === Git credentials (optional) ===
# Provide either a token or username/password for HTTPS remotes, or an SSH key path for SSH remotes.
# When credentials are supplied a local credential store is written so pulls/pushes succeed non-interactively.
# GIT_AUTH_TOKEN=ghp_xxx
# GIT_AUTH_USERNAME=git
# GIT_AUTH_PASSWORD=superSecret
# GIT_SSH_KEY_PATH=~/.ssh/id_rsa
# GIT_CREDENTIALS_PATH=./projects/.git-credentials
# GIT_DEFAULT_BRANCH=main  # used only as fallback if remote HEAD is unavailable
# GIT_USER_NAME=machine-client
# GIT_USER_EMAIL=machine-client@example.com

# === Logging ===
# LOG_FILE=./machine-client.log
# LOG_LEVEL=info
# LOG_CONSOLE=true

# === Context scanner ===
CONTEXT_SCAN=on
SCAN_INCLUDE=src/**,app/**,tests/**
SCAN_EXCLUDE=**/node_modules/**,**/.git/**,**/dist/**
SCAN_MAX_FILES=5000
SCAN_MAX_BYTES=100000000
SCAN_MAX_DEPTH=12
SCAN_TRACK_LINES=true
SCAN_TRACK_HASH=true

# === Multi-component scan (optional; JSON)
# Example:
# SCAN_COMPONENTS=[{"base":"api","include":["**/*.py"],"exclude":["**/__pycache__/**","**/.venv/**"]},{"base":"web","include":["src/**"],"exclude":["**/node_modules/**","**/dist/**"]}]

# === How to write summary.md after model call: model | scan | both
SUMMARY_MODE=both
