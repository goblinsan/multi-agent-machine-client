name: "blocked-task-resolution"
description: "Workflow for analyzing and attempting to unblock blocked tasks"
version: "3.0.0"

trigger:
  condition: "status == 'blocked'"

context:
  repo_required: true
  max_unblock_attempts: 10

variables:
  max_attempts: ${BLOCKED_MAX_ATTEMPTS || 10}
  tdd_aware: ${tdd_aware || false}
  tdd_stage: ${tdd_stage || 'implementation'}

steps:
  - name: check_max_attempts
    type: ConditionalStep
    config:
      condition: "(task.blocked_attempt_count || 0) >= (max_attempts)"
      on_true:
        - name: mark_permanently_blocked
          type: SimpleTaskStatusStep
          config:
            status: "blocked"
            comment: "Maximum unblock attempts (${max_attempts}) exceeded. Manual intervention required."
      on_false:
        - name: continue_unblock_attempt
          type: VariableSetStep
          config:
            set: {}

  - name: increment_attempt_counter
    type: VariableSetStep
    depends_on: ["check_max_attempts"]
    config:
      set:
        blocked_attempt_count: ${(task.blocked_attempt_count || 0) + 1}
        last_unblock_attempt: ${Date.now()}

  - name: mark_in_progress
    type: SimpleTaskStatusStep
    depends_on: ["increment_attempt_counter"]
    config:
      status: "in_progress"

  - name: analyze_blockage
    type: BlockedTaskAnalysisStep
    depends_on: ["mark_in_progress"]
    config:
      task_id: ${taskId}
      project_id: ${projectId}
      repo_root: ${repo_root}
      branch: ${branch}
      
  - template: context_analysis
    name: context_request
    depends_on: ["analyze_blockage"]
    overrides:
      config:
        step: "unblock-context"
        intent: "scan"
        payload:
          blocked_reason: ${blockage_analysis.reason}
          previous_attempts: ${blockage_analysis.previous_attempts}
        timeout: 600000

  - name: lead_analysis
    type: PersonaRequestStep
    depends_on: ["context_request"]
    config:
      step: "unblock-analysis"
      persona: "lead-engineer"
      intent: "analyze_blockage"
      payload:
        task: ${task}
        blocked_reason: ${blockage_analysis.reason}
        blocked_at_step: ${blockage_analysis.failed_step}
        previous_attempts: ${blockage_analysis.previous_attempts}
        attempt_number: ${blocked_attempt_count}
        max_attempts: ${max_attempts}
        context_snapshot: ${context_request.snapshot}
        repo: ${repo_remote}
        branch: ${branch}
        project_id: ${projectId}
        tdd_aware: ${tdd_aware}
        tdd_stage: ${tdd_stage}
        tdd_context: |
          TDD Context: ${tdd_aware ? 'This task is part of a test-driven development workflow' : 'Not TDD-aware'}
          ${tdd_aware ? 'TDD Stage: ' + tdd_stage : ''}
          
          TDD Stage Meanings:
          - write_failing_test: Writing test that should fail
          - failing_test: Test exists and is failing (EXPECTED during TDD)
          - implementation: Implementing code to make test pass
          - passing_test: Test is passing, refactoring may be in progress
          
          ${tdd_aware && tdd_stage === 'failing_test' ? '⚠️ CAUTION: Failing tests may be EXPECTED at this stage. Verify if blockage is legitimate.' : ''}
      timeout: 300000

  - name: unblock_attempt
    type: UnblockAttemptStep
    depends_on: ["lead_analysis"]
    config:
      task_id: ${taskId}
      project_id: ${projectId}
      strategy: ${lead_analysis.strategy}
      resolution_plan: ${lead_analysis.resolution_plan}
      repo_root: ${repo_root}
      branch: ${branch}

  - name: validate_unblock
    type: PersonaRequestStep
    depends_on: ["unblock_attempt"]
    config:
      step: "unblock-validation"
      persona: "tester-qa"
      intent: "validate_unblock"
      payload:
        task: ${task}
        unblock_result: ${unblock_attempt.result}
        resolution_applied: ${unblock_attempt.resolution}
        repo: ${repo_remote}
        branch: ${branch}
        project_id: ${projectId}
      timeout: 300000

  - name: mark_task_status
    type: ConditionalStep
    depends_on: ["validate_unblock"]
    config:
      condition: "validate_unblock.status == 'pass'"
      on_true:
        - name: mark_unblocked
          type: SimpleTaskStatusStep
          config:
            status: "open"
            comment: "Successfully unblocked after ${blocked_attempt_count} attempt(s)"
      on_false:
        - name: mark_still_blocked
          type: SimpleTaskStatusStep
          config:
            status: "blocked"
            comment: "Unblock attempt ${blocked_attempt_count} failed. Will retry."

failure_handling:
  on_workflow_failure:
    - name: mark_unblock_failed
      type: SimpleTaskStatusStep
      config:
        status: "blocked"
        comment: "Unblock workflow failed at step: ${failed_step}. Will retry on next iteration."

timeouts:
  default_step: 300000
  context_request_timeout: 600000
