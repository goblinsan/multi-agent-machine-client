name: "git-operations"
version: "1.0.0"
description: "Standard git operations (commit, push, PR creation)"

# Trigger condition
trigger:
  condition: "true"

# Context requirements
context:
  repo_required: true
  branch_strategy: "inherit"

# Input schema
# inputs:
#   repo: string (required)
#   branch: string (required)
#   operation: string (required) - commitAndPushPaths | ensureBranchPublished
#   commit_message: string (optional, required if operation == commitAndPushPaths)
#   paths: array<string> (optional) - specific files to commit, defaults to all changes
#   pr_title: string (optional) - for future PR creation support
#   pr_body: string (optional) - for future PR creation support
#   target_branch: string (optional) - defaults to main/master

# Steps
steps:
  # Step 1: Git commit and push (if requested)
  - name: commit_and_push
    type: GitOperationStep
    description: "Commit and push changes to branch"
    condition: "operation == 'commitAndPushPaths'"
    config:
      operation: "commitAndPushPaths"
      repoRoot: "${repo}"
      branch: "${branch}"
      message: "${commit_message}"
      paths: "${paths || []}"
    outputs:
      - commit_result

  # Step 2: Ensure branch published (if requested)
  - name: ensure_published
    type: GitOperationStep
    description: "Ensure branch is published to remote"
    condition: "operation == 'ensureBranchPublished'"
    config:
      operation: "ensureBranchPublished"
      repoRoot: "${repo}"
      branch: "${branch}"
    outputs:
      - publish_result

# Output mappings
outputs:
  commit_result: "${commit_result}"
  publish_result: "${publish_result}"
  success: "${commit_result.success || publish_result.success || false}"

# NOTE: PR creation not yet supported - requires GitHub API integration
# This will be added in a future iteration when dashboard has PR creation endpoint
